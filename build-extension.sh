#!/bin/bash
# Build script for WhatAp Browser Agent Auto-Injector
# Bundles whatap-browser-agent.js into whatap-inject-main.js

set -e

echo "🔨 Building WhatAp Extension..."

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
EXTENSION_DIR="$SCRIPT_DIR/extension"
AGENT_FILE="$EXTENSION_DIR/whatap-browser-agent.js"
OUTPUT_FILE="$EXTENSION_DIR/whatap-inject-main.js"

# Check if agent file exists
if [ ! -f "$AGENT_FILE" ]; then
    echo "❌ Error: $AGENT_FILE not found"
    exit 1
fi

echo "📦 Bundling agent code into MAIN world script..."

# Create output file with header
cat > "$OUTPUT_FILE" << 'EOF'
// WhatAp Browser Agent - MAIN World Injector
// Auto-generated by build-extension.sh - DO NOT EDIT MANUALLY
(function() {
  'use strict';

  console.log('[WhatAp MAIN] Initializing in page context...');

  // Listen for config from isolated world
  window.addEventListener('message', function(event) {
    // Only accept messages from same origin
    if (event.source !== window) return;

    // Check if this is WhatAp config message
    if (event.data.type === 'WHATAP_INJECT_CONFIG') {
      const { config, shouldInject } = event.data;

      if (!shouldInject) {
        console.log('[WhatAp MAIN] ⚠️ Injection skipped (disabled or blacklisted)');
        return;
      }

      console.log('[WhatAp MAIN] Received config, injecting agent...');

      try {
        // Initialize config in window object
        window.WhatapBrowserAgent = window.WhatapBrowserAgent || {
          config: config
        };

        console.log('[WhatAp MAIN] Configuration:', config);

        // Execute bundled agent code below (no eval needed!)
        // ==================== AGENT CODE START ====================
EOF

# Append agent code
cat "$AGENT_FILE" >> "$OUTPUT_FILE"

# Append template footer
cat >> "$OUTPUT_FILE" << 'EOF'
        // ==================== AGENT CODE END ====================

        console.log('[WhatAp MAIN] ✅ Agent executed successfully in page context');
      } catch (error) {
        console.error('[WhatAp MAIN] ❌ Failed to execute agent code:', error);
      }
    }
  });
})();
EOF

# Get file sizes
AGENT_SIZE=$(du -h "$AGENT_FILE" | cut -f1)
OUTPUT_SIZE=$(du -h "$OUTPUT_FILE" | cut -f1)

echo "✅ Build complete!"
echo "   Agent size: $AGENT_SIZE"
echo "   Output size: $OUTPUT_SIZE"
echo "   Output file: $OUTPUT_FILE"
echo ""
echo "🚀 Ready to load in Chrome!"
echo "   1. Go to chrome://extensions/"
echo "   2. Enable 'Developer mode'"
echo "   3. Click 'Reload' on the extension"
